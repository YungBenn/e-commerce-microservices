version: '3.7'

networks:
  default:
    name: e-commrce-network

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"

  redis:
    image: redis:7.2.3
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 20s
      timeout: 1s
      retries: 5

  auth-service:
    build:
      context: ../build/auth-service
      dockerfile: Dockerfile
    restart: always
    image: auth-service:v1
    ports:
      - "50051:50051"
    depends_on:
      - postgres
      - redis

  order-service:
    build:
      context: ../build/order-service
      dockerfile: Dockerfile
    restart: always
    image: order-service:v1
    ports:
      - "50052:50052"
    depends_on:
      - postgres

  product-service:
    build:
      context: ../build/product-service
      dockerfile: Dockerfile
    restart: always
    image: product-service:v1
    ports:
      - "50053:50053"
    depends_on:
      - mongo
    
volumes:
  mongo-data:
    driver: local
  postgres-data:
    driver: local
