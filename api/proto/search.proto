syntax = "proto3";

package pb;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/YungBenn/e-commerce-microservices/internal/product/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Search Service";
        version: "1.0.0";
        contact: {
            name: "YungBenn";
            url: "https://github.com/YungBenn/e-commerce-microservices";
            email: "rubenadisuryo22@gmail.com";
        };
    };
};

message CreateIndexRequest {
    string id = 1;
    string title = 2;
    string price = 3;
    repeated string tag = 4;
    string discount = 5;
    repeated string image = 7;
    string description = 8;
    string created_by = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
}

message IndexRequest {
    string title = 1;
    string price = 2;
    repeated string tag = 3;
    string discount = 4;
    repeated string image = 5;
    string description = 6;
}

message CreateIndexResponse {
    int64 status = 1;
    string message = 2;
    Product product = 3;
}

message ListProductRequest {
    int64 limit = 1;
    int64 page = 2;
}

message ListProductResponse {
    int64 limit = 1;
    int64 page = 2;
    int64 total_rows = 3;
    int64 total_pages = 4;
    repeated Product product = 5;
}

message ReadProductRequest {
    string id = 1;
}

message ReadProductResponse {
    Product product = 1;
}

message UpdateProductRequest {
    string id = 1;
    string title = 2;
    string price = 3;
    repeated string tag = 4;
    string discount = 5;
    repeated string image = 6;
    string description = 7;
}

message UpdateProductResponse {
    Product product = 1;
}

message DeleteProductRequest {
    string id = 1;
}

message DeleteProductResponse {
    string message = 1;
}

service ProductService {
    rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse) {
        option (google.api.http) = {
            post: "/v1/products"
            body: "*"
        };
    }
    rpc ListProducts(ListProductRequest) returns (ListProductResponse) {
        option (google.api.http) = {
            get: "/v1/products"
        };
    }
    rpc ReadProduct(ReadProductRequest) returns (ReadProductResponse) {
        option (google.api.http) = {
            get: "/v1/products/{id}"
        };
    }
    rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse) {
        option (google.api.http) = {
            put: "/v1/products/{id}"
            body: "*"
        };
    }
    rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse) {
        option (google.api.http) = {
            delete: "/v1/products/{id}"
        };
    }
}